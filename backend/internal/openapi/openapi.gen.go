// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package openapi

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// CreatePostRequest defines model for CreatePostRequest.
type CreatePostRequest struct {
	Body   string `json:"body"`
	Title  string `json:"title"`
	UserId int    `json:"user_id"`
}

// CreatePostResponse defines model for CreatePostResponse.
type CreatePostResponse = Post

// CreateScketchesRequest defines model for CreateScketchesRequest.
type CreateScketchesRequest struct {
	File openapi_types.File `json:"file"`
}

// CreateScketchesResponse defines model for CreateScketchesResponse.
type CreateScketchesResponse struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        int       `json:"id"`
	ImageUrl  string    `json:"imageUrl"`
	UpdatedAt time.Time `json:"updatedAt"`
	UserId    int       `json:"userId"`
	UserName  string    `json:"userName"`
}

// GetAllPostsResponse defines model for GetAllPostsResponse.
type GetAllPostsResponse = []Post

// GetAllSketchesResponse defines model for GetAllSketchesResponse.
type GetAllSketchesResponse = []Sketch

// GetPostResponse defines model for GetPostResponse.
type GetPostResponse = Post

// Post defines model for Post.
type Post struct {
	Body      string    `json:"body"`
	CreatedAt time.Time `json:"created_at"`
	Id        int       `json:"id"`
	Title     string    `json:"title"`
	UpdatedAt time.Time `json:"updated_at"`
	UserId    int       `json:"user_id"`
	UserName  string    `json:"user_name"`
}

// Sketch defines model for Sketch.
type Sketch struct {
	CreatedAt time.Time `json:"created_at"`
	Id        int       `json:"id"`
	ImageUrl  string    `json:"image_url"`
	UpdatedAt time.Time `json:"updated_at"`
	UserId    int       `json:"user_id"`
	UserName  string    `json:"user_name"`
}

// UpdatePostRequest defines model for UpdatePostRequest.
type UpdatePostRequest struct {
	Body  string `json:"body"`
	Title string `json:"title"`
}

// UpdatePostResponse defines model for UpdatePostResponse.
type UpdatePostResponse = Post

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *int       `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// SignInJSONBody defines parameters for SignIn.
type SignInJSONBody struct {
	Password string `json:"password"`
	UserName string `json:"user_name"`
}

// SignUpJSONBody defines parameters for SignUp.
type SignUpJSONBody struct {
	Password string `json:"password"`
	UserName string `json:"user_name"`
}

// PostPostJSONRequestBody defines body for PostPost for application/json ContentType.
type PostPostJSONRequestBody = CreatePostRequest

// PutPostJSONRequestBody defines body for PutPost for application/json ContentType.
type PutPostJSONRequestBody = UpdatePostRequest

// SignInJSONRequestBody defines body for SignIn for application/json ContentType.
type SignInJSONRequestBody SignInJSONBody

// SignUpJSONRequestBody defines body for SignUp for application/json ContentType.
type SignUpJSONRequestBody SignUpJSONBody

// PostSketchMultipartRequestBody defines body for PostSketch for multipart/form-data ContentType.
type PostSketchMultipartRequestBody = CreateScketchesRequest
