// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HelloWorldsColumns holds the columns for the "hello_worlds" table.
	HelloWorldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "lang", Type: field.TypeString},
		{Name: "message", Type: field.TypeString},
	}
	// HelloWorldsTable holds the schema information for the "hello_worlds" table.
	HelloWorldsTable = &schema.Table{
		Name:       "hello_worlds",
		Columns:    HelloWorldsColumns,
		PrimaryKey: []*schema.Column{HelloWorldsColumns[0]},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "body", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_users_posts",
				Columns:    []*schema.Column{PostsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SketchesColumns holds the columns for the "sketches" table.
	SketchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "image_name", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
	}
	// SketchesTable holds the schema information for the "sketches" table.
	SketchesTable = &schema.Table{
		Name:       "sketches",
		Columns:    SketchesColumns,
		PrimaryKey: []*schema.Column{SketchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sketches_users_sketches",
				Columns:    []*schema.Column{SketchesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HelloWorldsTable,
		PostsTable,
		SketchesTable,
		UsersTable,
	}
)

func init() {
	PostsTable.ForeignKeys[0].RefTable = UsersTable
	SketchesTable.ForeignKeys[0].RefTable = UsersTable
}
